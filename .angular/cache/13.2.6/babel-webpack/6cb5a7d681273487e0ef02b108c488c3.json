{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HttpService = /*#__PURE__*/(() => {\n  class HttpService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    get(url) {\n      return this.http.get(environment.DomainURL + url);\n    }\n\n    post(url, body) {\n      return this.http.post(environment.DomainURL + url, body);\n    }\n\n    put(url, body) {\n      return this.http.post(environment.DomainURL + url, body);\n    }\n\n    patch(url, body) {\n      return this.http.patch(environment.DomainURL + url, body);\n    }\n\n    delete(url, body) {\n      return this.http.delete(environment.DomainURL + url, body);\n    } //Todo: use a better approach\n\n\n    postHeaders(url, body) {\n      const headers = {\n        accept: 'application/json, text/plain, */*',\n        'accept-language': 'en-US,en;q=0.9',\n        'access-control-allow-credentials': 'true',\n        'access-control-allow-headers': 'Access-Control-Allow-Headers, Origin,Accept, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers',\n        'access-control-allow-methods': 'GET, POST, OPTIONS, PUT, PATCH, DELETE',\n        'access-control-allow-origin': '*',\n        'cache-control': 'no-cache',\n        'content-type': 'application/x-www-form-urlencoded',\n        pragma: 'no-cache',\n        source: 'web-recorder'\n      };\n      return this.http.post(environment.DomainURL + url, body, {\n        headers: headers\n      });\n    }\n\n    fetchFile(url) {\n      const headers = new HttpHeaders({\n        Accept: 'text/csv'\n      });\n      const options = {\n        headers\n      };\n      return this.http.post(url, null, options);\n    }\n\n  }\n\n  HttpService.ɵfac = function HttpService_Factory(t) {\n    return new (t || HttpService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  HttpService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpService,\n    factory: HttpService.ɵfac,\n    providedIn: 'root'\n  });\n  return HttpService;\n})();","map":null,"metadata":{},"sourceType":"module"}