{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/authentication/authentication.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/progress-spinner\";\n\nfunction LoginComponent_mat_progress_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-progress-spinner\", 16);\n  }\n}\n\nfunction LoginComponent_div_13_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Username is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, LoginComponent_div_13_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.username.errors.required);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nfunction LoginComponent_input_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 19);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, ctx_r2.submitted && ctx_r2.f.password.errors));\n  }\n}\n\nfunction LoginComponent_div_16_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Password is required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtemplate(1, LoginComponent_div_16_div_1_Template, 2, 0, \"div\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.f.password.errors.required);\n  }\n}\n\nfunction LoginComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function LoginComponent_button_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.login();\n    });\n    i0.ɵɵtext(1, \" Login \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction LoginComponent_button_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function LoginComponent_button_20_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.isDoingSSOLogin();\n    });\n    i0.ɵɵtext(1, \" Continue \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(auth, formBuilder, route, router) {\n      this.auth = auth;\n      this.formBuilder = formBuilder;\n      this.route = route;\n      this.router = router;\n      this.emailVerified = false;\n      this.loading = false;\n      this.submitted = false;\n    }\n\n    get f() {\n      return this.form.controls;\n    }\n\n    isDoingSSOLogin() {\n      this.auth.isSSOUser(this.f.username.value).subscribe(res => {\n        this.emailVerified = res.success;\n        console.log(res);\n        debugger;\n      });\n    } // implement login logic here, using the auth service\n\n\n    ngOnInit() {\n      this.form = this.formBuilder.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n\n    login() {\n      this.auth.login(this.f.username.value, this.f.password.value).subscribe(res => {\n        console.log(\"logged in\");\n      });\n    }\n\n    openSidePanel() {\n      chrome.runtime.sendMessage({\n        msg: 'eassistant-injection-panel'\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthenticationService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 22,\n    vars: 10,\n    consts: [[1, \"login-wrapper\"], [\"mode\", \"indeterminate\", 4, \"ngIf\"], [1, \"login-header\"], [\"href\", \"\"], [\"src\", \"assets/icons/logo.svg\", \"alt\", \"\"], [1, \"login-body\"], [3, \"formGroup\"], [1, \"form-group\"], [1, \"header-title\"], [1, \"header-des\"], [\"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"Email address*\", 1, \"customer-account\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", \"class\", \"customer-account\", \"placeholder\", \"Password\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"action-account\"], [\"class\", \"manage-btn\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [3, \"click\"], [\"mode\", \"indeterminate\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"customer-account\", 3, \"ngClass\"], [\"type\", \"button\", 1, \"manage-btn\", 3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, LoginComponent_mat_progress_spinner_1_Template, 1, 0, \"mat-progress-spinner\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"a\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"form\", 6)(7, \"div\", 7)(8, \"h1\", 8);\n        i0.ɵɵtext(9, \"Email address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"p\", 9);\n        i0.ɵɵtext(11, \" Enter the Email Address below that you would like to login as: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 10);\n        i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 7);\n        i0.ɵɵtemplate(15, LoginComponent_input_15_Template, 1, 3, \"input\", 12);\n        i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 2, 1, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 7)(18, \"div\", 13);\n        i0.ɵɵtemplate(19, LoginComponent_button_19_Template, 2, 0, \"button\", 14);\n        i0.ɵɵtemplate(20, LoginComponent_button_20_Template, 2, 0, \"button\", 14);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(21, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_21_listener() {\n          return ctx.openSidePanel();\n        });\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx.submitted && ctx.f.username.errors));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.username.errors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.emailVerified);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f.password.errors);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.emailVerified);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.emailVerified);\n      }\n    },\n    directives: [i4.NgIf, i5.MatProgressSpinner, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i4.NgClass],\n    styles: [\".login-wrapper[_ngcontent-%COMP%]{width:350px;height:339px;background:white;padding:16px 24px}.login-header[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:space-between}.header-title[_ngcontent-%COMP%]{font-weight:500;font-size:18px;line-height:27px;color:#0c2340;margin:0 0 4px}.header-des[_ngcontent-%COMP%]{font-weight:400;font-size:12px;line-height:18px;color:#858585;margin:0 0 24px}.login-body[_ngcontent-%COMP%]{margin-top:32px}.login-body[_ngcontent-%COMP%]   .customer-account[_ngcontent-%COMP%]{margin:0 0 8px}.login-body[_ngcontent-%COMP%]   .manage-btn[_ngcontent-%COMP%]{margin:32px 0 24px;text-transform:uppercase}.forgot-password[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:flex-end;font-weight:400;font-size:12px;line-height:18px;gap:4px}.forgot-password[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#0097ff;text-decoration:underline}.forgot-label[_ngcontent-%COMP%]{color:#000}.customer-account[_ngcontent-%COMP%]{width:100%;border:1px solid #4F4F4F;border-radius:26px;background:white;padding:16px;font-weight:400;font-size:12px;line-height:16px;box-sizing:border-box;color:#000}.customer-account[_ngcontent-%COMP%]:focus{outline:none;border:1px solid #828282}.customer-account[_ngcontent-%COMP%]::placeholder{color:#4f4f4f}.manage-btn[_ngcontent-%COMP%]{font-weight:600;font-size:14px;line-height:24px;color:#333;padding:8px 37px;background:#FECB2F;border-radius:26px;border:none;cursor:pointer}.manage-btn[_ngcontent-%COMP%]:focus{outline:none}.action-account[_ngcontent-%COMP%]{display:flex;justify-content:flex-end}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}